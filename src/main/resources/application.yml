spring:
  profiles:
    active: dev
    include: aws

---
spring:
  config:
    activate:
      on-profile: dev

  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    database-platform: org.hibernate.dialect.MySQL57InnoDBDialect
    open-in-view: false
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${GOOGLE_CLIENT_ID}
            clientSecret: ${GOOGLE_CLIENT_SECRET}
            redirectUri: http://localhost:8080/login/oauth2/code/google
            scope: profile,email

          naver:
            clientId: ${NAVER_CLIENT_ID}
            clientSecret: ${NAVER_CLIENT_SECRET}
            redirectUri: '{baseUrl}/{action}/oauth2/code/{registrationId}'
            authorization_grant_type: authorization_code
            scope: name,email,profile_image
            clientName: Naver

        provider:
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize
            token_uri: https://nid.naver.com/oauth2.0/token
            userInfoUri: https://openapi.naver.com/v1/nid/me
            user_name_attribute: response

jwt:
  issuer: ${JWT_ISSUER}
  secretKey: ${JWT_SECRET_KEY}
  tokenExpiration: ${JWT_TOKEN_EXPIRATION}
  preAuthTokenExpiration: ${JWT_PRE_AUTH_TOKEN_EXPIRATION}
  tokenPrefix: ${JWT_TOKEN_PREFIX}
  redirectUrl: ${JWT_REDIRECT_URL}

sentry:
  dsn: ${SENTRY_DSN}
  logging:
    minimum-event-level: error
    minimum-breadcrumb-level: error

management:
  endpoints:
    jmx:
      exposure:
        include: "*"
    web:
      exposure:
        include: "prometheus"
  endpoint:
    prometheus:
      enabled: true
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

oauth2:
  failureRedirectUrl: http://localhost:3000/login
